import 'package:flutter/material.dart';
import 'dart:math';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:intl/intl.dart';
import 'package:sqflite/sqflite.dart';
import 'dart:io';

import '../Database/database.dart';


class Model extends ChangeNotifier {
  Text error2 = const Text(
    'Nope, Not Right Password Rabbit',
    style: TextStyle(color: Colors.red, fontSize: 17, fontFamily: 'Roboto'),
    textAlign: TextAlign.center,
  );
  Text error1 = const Text(
    '',
  );

  Text _errotext1 = const Text(
    '',
    style: TextStyle(color: Colors.red, fontSize: 1, fontFamily: 'Roboto'),
    textAlign: TextAlign.center,
  );
  Text get errortext => _errotext1;

  TextEditingController passwordlogin = TextEditingController();

  List<Map<String, String>> passwords = [
    {'password': '86as'},
    {'password': '86AS'},
  ];

  bool checkPassword() {
    String passwordInput = passwordlogin.text;

    bool userExists = passwords.any((userpassword) {
      return userpassword['password'] == passwordInput;
    });

    if (!userExists) {
      _errotext1 = error2;
      notifyListeners();
    } else {
      _errotext1 = error1;
      notifyListeners();
    }

    return userExists;
  }

  // dashboards ---------------------------

  List<Dashboard> dashboards = [
    Dashboard(title: 'الاذكار', image: 'images/dashboard/dashboard1.png'),
    Dashboard(title: 'المهام', image: 'images/dashboard/tasks.png'),
    Dashboard(title: 'الأهداف', image: 'images/dashboard/goals.png'),
    Dashboard(title: 'المذكرات', image: 'images/dashboard/diary.png'),
    Dashboard(
        title: 'المحاسبة اليومية', image: 'images/dashboard/selfdashboard.png'),
    Dashboard(title: 'الدعاء', image: 'images/dashboard/doaa.jpg'),
  ];

// MESSAGEFORHEART ---------------------------------------------------------------------------------------------------------------

  final Map<String, List<String>> moodMessages = {
    'مبسوطة': [
      'زَوجُوهُنَّ فلَا ينفعُ المَليحةَ كتاب وانهوا التعاسةَ وجمّعوا بين الأحباب.',
      'تظنُ أنِى فِى سرٍ أُراقِبُهَا فتُكثِرُ النشرَ مُنذ الصبحِ للسحرِ. قولوا لها إننِى واللهِ حاظِرُهَا ولا أرى أىّ منشورٍ من الحظرِ.',
      'قالوا : الشاى أو مَن تهوَى؟ قلت : الشاى مِمّن أهوَى.',
      'وتُهدينا الحياةُ انفاقًا فى آخر النفق.',
      'أسماءُ مهلًا! مَا عشقتُ سِواكِ إلا رُدينا ، والذى سَوّاكِ إن لم تَخُنِى الذكرياتُ فإننِى أحببتُ سلمَى قبلَ ما ألقاكِ وعشقتُ بعضَ الطالباتِ وجارةً كانتْ تُواعدنِى من الشُباكِ أيضًا وآنسةُ العلومِ وقبلهَا جوريةً خُلقت بلا أشواكٍ. فإذا أبيتِ فكلهن رواغبٌ، وإذا رضيتِ فكلهن فداكِ.',
      'جاءت وفي كفِّها حلوى قدِ احترقت والحزنُ منها على الوجه الوضيءِ بدا. فقلت مهلًا رعاك الله يا كبدي، لا يصنعُ الحلوُ حلوًا مثله أبدا.',
      'كُن فخورًا بمحاولاتِك وإنجازاتِك حتى تلك التي لم يعلَم عنها أَحد.',
      'أحبّ ذلك الجزء من اليوم الذي تتذكر فيه كم كان الأمر صعبًا ومعقدًا، لكنه انتهى، وها أنت بخيرٍ الآن.',
      'سيُزهر الطريق الذي سلكته يومًا، سيتَلاشى عنكَ التعب، ستشرقُ روحُك بعدَ ذبولٍ ظننته يومًا لن يزول.',
      'أتدري ما هو الاطمئنان؟ تخيل أن عين اللهِ ناظرةٌ إليك في هذه اللحظة وتلك، التي تظن فيها أنّك قد خُذلت.',
      'أشياءُ بسيطةٌ جدًا قادرة على صُنع الفرحِ بداخلك، فقط كُن قنوعًا بما تملك، راضيًا بالقدر، ومؤمنًا بسعادتك.',
      'يُريدُهَا غادةً حسناء فاتنةً نحيلةَ الخَصرِ والأكتافِ والعُنقِ. وهو الذي لو رأته الجن لانصرعت ولاستعـــاذت برب الناس والفلــق.'
    ],
    'زعلانة': [
      'عارف إن الدنيا ممكن تكون صعبة دلوقتي، بس دايمًا في ضوء في آخر النفق. أنا هنا دايمًا جنبك.',
      'إنتِ قوية وجميلة من جوا ومن برا. ما تخليش أي حاجة تحبطك.',
      'كل يوم فرصة جديدة لبداية جديدة. ما تفقديش الأمل.',
      'أحيانًا كل اللي بنحتاجه شوية وقت وصبر. واثق إن الأمور هتتحسن قريب.',
      'ما تخليش أي حاجة تكسر روحك. إنتِ أقوى من أي تحدي.',
      'كل حاجة بتحصل لسبب، وأكيد في حاجة حلوة مستنياكي في المستقبل.',
      'خدي وقتك واهتمي بنفسك. إنتِ تستاهلي كل خير.',
      'الحياة ساعات بتبقى صعبة، بس إنتي قدها.',
      'في ناس كتير بتحبك وبتدعيلك وانا اولهم.',
      'ماتخليش حاجة تزعلك، إنتي تستاهلي كل حاجة حلوة.',
      'الحياة مليانة تحديات، بس إنتي أقوى منها.',
      'إنتي جميلة من جوه وبره، ماتنسيش ده أبدًا.',
      'مهما كان الوضع صعب، إنتي هتعدي.',
      'خليكي دايمًا واثقة في نفسك.',
      'الحياة أوقات بتبقى مش مفهومة، بس دايمًا في نور في آخر النفق.',
      'ماتزعليش، الدنيا هتضحكلك تاني.',
      'وددتُ لو طيفي يُجاورك؛ حامياً، رفيقاً، مُحباً.',
      'وكانا غريبان يتشاركان اليأس والأمل، فغدا زوجان يتداولان الحبَّ والسَّكن.',
      'حتى إذا استيأستْ روحٌ بكربتها ساقَ الإلهُ لها التيسيرَ و الفرجَ.',
      'كُل مُتوقّعٍ آت. مُنتظر الفرح سيحصل عليه، وصاحب اليقين ستتحقّق فكرته، مُسيء الظن سينال ظنّه؛ فتوقع ما تتمنى.',
      'قولي بربِّ الكونِ من قدْ أوجعكْ؟ بثّي إليَّ همومكِ فأنا معكْ. وإذا ذرفتي دمعةً سأضمّها. لا تحزني فالقلبُ جاءَ ليسمعكْ.',
      'وَلا تَقْنَطَنْ مِن رَحمةِ اللَّهِ إنَّمَا قُنُوطُكَ مِنهَا مِن ذُنوبِك أعظمُ.',
      'وثِق بربك وانظر ما يكونُ غدًا. سيفتحُ اللهُ .. أبوابًا وأبوابا.',
      'ستطيب من بعد العناءِ حياتنا ونذوق من بعد المرارة سُكّرَا.',
      'وَلَقَدْ نَعْلَمُ أَنَّكَ يَضِيقُ صَدْرُكَ بِمَا يَقُولُونَ .. متزعليش ربنا هيعوضك عن كل لحظة حزن شوفتيها.',
      'قل للذي نام والأحزان تخنقهُ وهمّه في ظلام الليل يشقيهِ. هوّن على قلبك المحزون إن لهُ ربًّا سيملؤه نورًا ويرويه.',
      'وقُل للنفسِ إن فقدت رجَاهَا وصار اليأس يوهنها قواها. ثقى بالله كم خافت نفوس من الدنيا وخالقها كفاها.',
      'وَقُــلْ لِــمَـنْ مَــسَّـتِ الأَوجَــاعُ مُــهْـجَــتَـهُ يَأوِي إِلَـىٰ الله .. إِنَّ اللَّهَ يأويـه.',
      'قال يا عُمر : "إنّما هي أيامٌ ونمْضِي .. لا تحزن".',
      'ليسَ المهمُ كيف ينظر اليكَ البعض، المهم هو كيفَ ترى نفسكَ من الداخل.',
      'أرضُ اللهِ واسعة بأنحائها، بفرصها، بالبدائل والخيارات والعوض الجميل.',
      'وتضيقُ بِي، فأنظرُ إلى السماء فأجدُها تتسعُ دائمًا لقلبِي وأحزانِي؛ هذه سِعَةُ السماء فكيفَ بسِعَةِ رحمةِ خالِقِها.',
      'لا تجعلوا من أرواحكم ضحيّةً لمشاعر سلبية مؤقتة، اسْقُوها بالأمل، ودَعوها تُزهر.',
      'مثلما استطعت أن تتجاوزَ تحديات سابقة مررت بها، ستتمكن بإذن الله من تجاوز التحدي الذي تمر به هذه الأيام.',
      'حين تتعب وتتألم تذكر ذلكَ الحلم الذي تتمنى الوصول إليه وقاوم إياك أن تسمح لليأس أن يهدمَ حلمك.',
      'مهما كانت نتيجة امتحاناتك، لا تفقد ثقتك بنفسك، ما دمت بذلت ما في وسعك لا لوم عليك، قد جعل الله في كلّ خيبة خيرة ولو أحزنتك، ما زُرعت بمكان لتذبل أغصانك ولا هبوط معدل نهاية حياتك.',
      'ليتني أستطيع أن أُقاسِمَك هَذه الهُموم والأحزان الُتي تُعالجُها، أو أحتمِلَها عنك جميعها حتّىٰ لا أراك بين يديَّ إلّا باسمًا مُتطلِّقًا في جميع آنائك وساعاتك.',
      'لستُ متأكدًا حيال شيءٍ في هذا العالم، كل شيء قابل للشك، لكنني متيقن بأن الله لا يضيع شخصًا ترك العالم كله ولجأ إليه.',
      'يعلمُ ربُّك موضع كسرك، فيجبرهُ بقدرته.. يدبّر لك كلّ شيءٍ وأنت لا تشعر، يدبّر الأوقات والظروف، ثمّ يذهلك بعظمة ترتيبه، فترضى.',
      'ما دام اللّٰه يعلمُ كمّ الجهد الذي تبذلهُ، ومدىٰ رغبتك وتعلّقك بما تَسعىٰ له، فلا جُهد ضائع لك، ولا خَيبة ستُصيبك.',
      'وإن ضاقَت الأركانُ بكَ يومًا فرُكن الله باقٍ لا يضيق.',
      'لعلك الآن حزين، وفرحتك تُجهز في السماء فصبرٌ جميل، أبشر بعوض اللّه لقلبك.',
      'تدابيرُ الله عظيمةٌ لدرجةٍ تفوقُ أحزاننا، وقلّة حيلتنا وشتى توقعاتنا، فمادام أمرك بيد الله لا تخفْ من شيء.',
      'الشِدة التي تعيشها الآن مؤقتة وزائلة.. اليُسر قادم.. وأيام السرور كثيرة وأيام الهناء وفيرة. هون على قلبك.',
    ],
    'محبطة': [
      'عليك النهوض، حتى وإن توسّل لكَ قلبك للبقاء في الأسفل.',
      'أن أصحو على أيامٍ مُزهِرة، وأن أحصد نتيجة صبري ببهجةٍ تملأ بقية العُمر.',
      'ابتسم واجعل الشمس تشرق في قلبك والنور يشع من داخلك تفاؤلًا وثقة بالله بأنه لن يخذلك.',
      'ستجد دائمًا سببًا للسعادة، فقط تأمل حياتك، واقنَع بما رزقت. اشعر بالامتنان وتقبل واعرف أن من حق نفسك عليك أن تُشعرها بالرضا.',
      'اصنع بنفسكَ الحياة التي ترغب أن تعيشها، فلا أحد غيرك سيصنعُها لك.',
      'اسعَ، فما سعى للهِ ساعٍ إلا بلَغ.',
      'لا أحدَ سابِقك ولا أنتَ بسابقِ أحد، كلٌ يسيرُ لِقدَره.',
      'الطرقُ الصعبة والوصول بعد صراع طويل مع أحلامك، هي من تبقيكَ شخصًا مُختلفًا، المهم أن لا تستسلم.',
      'إن كان لابُدّ من وجود الظلام في حياتِنا، إذًا لِنَلمعَ فيه كلمعان النجوم في ظُلمة السماء.',
      'لا تَستكثر علىٰ نفسك تحقيق كُل ما ترغبُ به، لا تشعر بأنك أقل مِن كل الذين حَصدوا نجاحات عَظيمة وَوصلوا إلى قِممهم الخَاصة، فقط.. ثِق بِنفسك.',
      'لا تخشَ من البدء من جَديد، فهذهِ المرَّة لن تبدأَ مِن الصفر، ولكنّك تبدأ من تجربة.',
      'الحياة ليست سهلةً لأيّ أحدٍ مِنّا، لذلك يجب أن تكون لدينا المثابرة، وقبل كُلّ شيء الثقة بأنفسنا يجب أن نؤمن أننا موهوبون بشيءٍ ما ويجب تحقيق هذا الشيء.',
      'كُل إنجازٍ عظيم يظهرُ علىٰ السَّطح خلفهُ المِئات مِن المُحاولات الفاشِلة، والانتصارات الصَّغيرة، ولكن سِر الوُصول في الإصرار والاستمرار.',
      'أنْ لكِ شيئًا في هذه الحياة، فلا تخافي وامضي قُدُمًا لنيلِه.',
      'ثمَّ يخبرنا الصّباح بطريقةٍ دافئة وحنونة بأنَ لكلِّ عتمة نهاية ويمكنُ للإنسان أن يَبدأ من جديدٍ بروحٍ شغوفة ومُحبّة وأنَّ ما حدثَ بالأمسِ يمكنُ أن تَمحوه سعادات اليومِ الصغيرة.',
      'لكُل شخص يستمرُ بالكفاح مهما كسرت الأيَّام مجادِيفه، لكل شخص إيجابي يقاوم لأجل مستقبله وأُمنياته ومُبتغاه، أنت عظيم.',
      '"لم أفشل، لقد وجدت فقط 10،000 طريقة لا تعمل." - توماس إديسون',
      'لا بأس إنها فقط القليل من الأيَّام التي تحتاج إلىٰ المزيد من الاجتهاد عليك أن تبذل فيها ما تستطيع لأنها ستصنع مستقبلك.',
      'أظن أنني أستحق أن أحاول من أجلي.',
      'طالما هناك شُروقٌ في كلِّ يوم، هناك مزيد من الحياة، مزيد من اللُطف، مزيد من السعادات الغامرة والمسرَّات الدائمة، من كلِّ شيءٍ تتمناه قلوبنا.',
      'أن تكون نفسك في عالم يحاول باستمرارٍ أن يُغيرَك إلى شيءٍ أخر فهذا من أعظم الإنجازات.',
      'أن نصيرَ أخفَّ وأشجَع؛ كي لا يهزمنا القلق واليأس؛ كي نركضَ حالمين بالغَد، وفي قلوبِنا الأمل والحب.',
      'وأسألك بنورِ وجهك الذي أشرقت له كلّ الظلمات، أن تضيءَ لنا الطَّريق أينما اتجهنا.',
      'ليكُن في روحك إصرار وفي أعماقك أمل، لا يعتري خطواتك يأسٌ ولا سأمُ.',
      'ما زرَع اللهُ في قلبِكَ رغبةَ الوصولِ لأمرٍ معين، إلا وهو يعلمُ أنكَ ستَصل.',
      'ادرس اقرأ تثقف ازداد جمالًا، كُن كالجوهر النادر لا يمكن العثور عليهِ بسهولة، ثم اجتهد وواجه الحياةَ بألفِ قوة.',
      'في لحظةٍ لا تتوقعها أبدًا، ستجد نفسك وسط حُلمك الذي طالما أردته وتمنيته، فلا تفقد الأمل أبدًا بالوصول.',
      'يومًا ما ستبدو فخورًا بكل الصّعاب التي واجهتها بحياتك، بكل لحظة خوف، توتّر، قلق، سهر، ستبدو فخورًا جدًا بعبورك.',
      'حافِظ على الشغف الذي يجعلكَ تبتسم بمجرد التفكيرِ به، كُن سعيد جدًا دون أي سَبَب، ابتسم لأنك تملك حلمًا عظيمًا وتنتظر أمرًا رائعًا من الله.',
      'ما من شيءٍ بوسعه أن يحجبَ الشَّمس عن رُوحك، فالضُّوء نافذ والنُّور وارد، والصُّبح دائمًا قريب.',
      'الفُرَص لا تأتي مصادفة، نحن من نخلقها لأنفسنا.',
      'تذكَر، أنت شيء كبير، أنت أمل كبير.',
      'توقع الأفضلَ دائمًا، فتَوقعاتُك لها دورٌ في صناعةِ حياتك… فَالتشاؤم يجلبُ لك اليأسَ ويحبطكْ، والتفاؤل يعطيك الأملَ ويدفعُك للعمل… تفائلوا بالخيرِ تَجدوهُ.',
      'ابتسم ودَع الجميعَ يعلم أنك اليوم أقوى بكثيرٍ مما كنت عليه بالأمس.',
      'لا تنتظر أن يُقدّرَ الناس ما تقوم به لأجلهم، قدّر نفسك وكافئها علىٰ كُل بادرة جميلة تفعلها، وكُل إنجازٍ مهما بدا صغيرًا في نظر الآخرين.',
      'وامضِ لحُلمك واثقًا، كُن في مقدمة الصفوف وامنح فؤادك أن يسافر في الأماني دون خوف، فاليوم تبذلُ للمنى وغدًا سترضيك القطوف، أنت الصباحُ فلا تضق مهما تكدرت الظروفْ.',
      'من أراد القِمّة، فليرفع الهمة، فما وصل أحد إلى مبتغاه وهو هائم يمشي على هواه.',
      'الفكرة باختصار، ضع هدفًا ولا تتخلى عنه حتى تحققه.',
      'لا تتوقف أبدًا عن فعل الأشياء التي تجعلك تشعر بأنك على طبيعتك حتى لو فشِلت.',
      'كم بكينا لأنّنا لم نبلغ شمسًا ولا قمرًا، ثُمَّ وضع اللّٰه مجرةً بأكملِها بين أيدينا.',
      'يليقُ بِكَ أن تكون ضوءًا لا ينطفئ، أن تكون ماءً لا يجف وأن تكون كُل الأشياء السعيدة الّتي لا يُمكن أن يعبرها الحُزن يومًا.'
    ]
  };

  List<String> messageHistory = [];
  String dropdown1 = '';
  String get dropdown => dropdown1;
  String messageforheart = '';
  int currentMessageIndex = 0;
  bool isNavigatingHistory = false;

  void setdropdown(String value) {
    dropdown1 = value;
    notifyListeners();
  }

  String? lastMessage;
  void showMessageforheart() {
    if (isNavigatingHistory &&
        currentMessageIndex < messageHistory.length - 1) {
      currentMessageIndex++;
      messageforheart = messageHistory[currentMessageIndex];
    } else {
      var random = Random();
      var messages = moodMessages[dropdown1];

      String nextMessage;
      do {
        nextMessage = messages![random.nextInt(messages.length)];
      } while (nextMessage == lastMessage && messages.length > 1);
      lastMessage = nextMessage;
      messageforheart = nextMessage;
      messageHistory.add(messageforheart);
      currentMessageIndex = messageHistory.length - 1;
      isNavigatingHistory = false;
    }
    notifyListeners();
  }

  void getPreviousMessageforheart() {
    if (currentMessageIndex > 0) {
      currentMessageIndex--;
      isNavigatingHistory = true;
      messageforheart = messageHistory[currentMessageIndex];
    } else {
      messageforheart = messageforheart;
    }
    notifyListeners();
  }

// messagefortime -----------------------------------------------------------------------------------------------
  List strings = [
    'https://drive.google.com/file/d/1u6C8JsjzztuX4Ffq4gh1r62e2o7SSVFj/view?usp=sharing',
    'https://drive.google.com/file/d/1_U_cBrIJRbrZ6PhriX001hZiooDI_ujm/view?usp=drive_link',
    'https://drive.google.com/file/d/1_VTqlqhoER-ItGq0q0KOh956JtUGSvI8/view?usp=drive_link',
    'https://drive.google.com/file/d/15gVd-6TjNt5cEz4PtWP059SH533yXD5n/view?usp=sharing',
    'https://drive.google.com/file/d/1wh_bdN9XNlW57CM7X6k0MEoeJ7oV6E8m/view?usp=sharing'
  ];
  int countermessage = 0;
  int pointer = 0;

  String messagefortime =
      'https://drive.google.com/file/d/1u6C8JsjzztuX4Ffq4gh1r62e2o7SSVFj/view?usp=sharing';

  void check() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    countermessage = (prefs.getInt('lastcounter1') ?? 0);

    if (countermessage < strings.length) {
      countermessage++;
      pointer = countermessage;
      messagefortime = strings[countermessage];
      prefs.setInt('lastcounter1', countermessage);
    }
    notifyListeners();
  }

  void returnback() {
    pointer--;
    if (pointer <= countermessage && pointer >= 0) {
      messagefortime = strings[pointer];
      notifyListeners();
    }
    notifyListeners();
  }

  void forward() {
    pointer++;
    if (pointer <= countermessage && pointer >= 0) {
      messagefortime = strings[pointer];
    }
    notifyListeners();
  }

  // dairy list -------------------------------------------------------------------------------------------------------------------
  List<Diary> diarylist = [];

  String getDayMonthName(String dateStr) {
    DateTime date = DateTime.parse(dateStr);
    return DateFormat('EEEE, d MMMM').format(date);
  }

  String getMonthName(DateTime date) {
    return DateFormat('MMMM').format(date);
  }

  Future<Map<String, List<Diary>>> groupDiariesByMonth() async {
    List<Diary> diaryList = await DatabaseHelper.getDiaries();

    diaryList.sort(
        (a, b) => DateTime.parse(b.date).compareTo(DateTime.parse(a.date)));

    Map<String, List<Diary>> map = {};
    for (var diary in diaryList) {
      DateTime date = DateTime.parse(diary.date);
      String month = "${date.year} ${getMonthName(date)}";
      if (!map.containsKey(month)) {
        map[month] = [];
      }
      map[month]?.add(diary);
    }

    return map;
  }

  void removeDiary(int id) {
    diarylist.removeWhere((diary) => diary.id == id);
    notifyListeners();
  }
// adddiary -------------------------------------------------------------------------------------------------------------------

  final TextEditingController titleController = TextEditingController();
  final TextEditingController subtitleController = TextEditingController();

  // picfortime -------------------------------------------------------------------------------------------------------------------

  List<Imagefortime> picfortime = [
    Imagefortime(image: 'images/imagefortime/imagetime1.jpg'),
    Imagefortime(image: 'images/imagefortime/imagetime2.jpg'),
    Imagefortime(image: 'images/imagefortime/imagetime3.jpg'),
    Imagefortime(image: 'images/imagefortime/imagetime4.jpg'),
    Imagefortime(image: 'images/imagefortime/imagetime5.jpg'),
  ];
  String imagestring = '';
  bool nothing = true;

  void addpicfortime() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    int ipicfortime =
        prefs.getInt('ipicfortime1') ?? 0; 
//
    nothing = false;
    ipicfortime++;
    if (ipicfortime >= picfortime.length) {
      ipicfortime = picfortime.length -
          1; 
    }
    imagestring = picfortime[ipicfortime].image;
    prefs.setInt('ipicfortime1', ipicfortime);
    notifyListeners();
  }

  void returnbackpicfortime() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    int ipicfortime = prefs.getInt('ipicfortime1') ?? -1;
    ipicfortime--;
    if (ipicfortime < 0) {
      ipicfortime = 0;
      imagestring = picfortime[ipicfortime].image;
      prefs.setInt('ipicfortime1', ipicfortime);

      notifyListeners();
    } else {
      imagestring = picfortime[ipicfortime].image;
      prefs.setInt('ipicfortime1', ipicfortime);

      notifyListeners();
    }
  }

  // Azkarscreen ------------------------------------------------------------------------------------------------------
  int index = 0;
  int pointerazkar = 0;
  List<int> counterazkar = List<int>.filled(25, 0);

  void zero() {
    counterazkar = List<int>.filled(25, 0);
    notifyListeners();
  }

  void incrementCounter() {
    if (counterazkar[pointerazkar] <
        azkar[index].data[pointerazkar]['number']) {
      counterazkar[pointerazkar]++;
    }
    notifyListeners();
  }

  void minpointer() {
    if (pointerazkar > 0) {
      pointerazkar--;
      notifyListeners();
    }
  }

  void updatePointer(int newPointer) {
    pointerazkar = newPointer;
    notifyListeners();
  }

  void plspointer() {
    if (pointerazkar < azkar[index].data.length - 1) {
      pointerazkar++;
      notifyListeners();
    }
  }

  void refreshazkar() {
    counterazkar[pointerazkar] = 0;
    notifyListeners();
  }

  List<Azkar> azkar = [
    Azkar(
      title: 'أذكار الصباح',
      icon: Image.asset('images/icons/sun.png', width: 40, height: 40),
      data: [
        {
          'text':
              'أَعُوذُ بِاللَّهِ مِنَ الشَّيطَانِ الرَّجِيمِ {اللَّهُ لَا إِلَهَ إِلَاّ هُوَ الْحَيُّ الْقَيُّومُ لَا تَأْخُذُهُ سِنَةٌ وَلَا نَوْمٌ لَّهُ مَا فِي السَّمَوَاتِ وَمَا فِي الأَرْضِ مَن ذَا الَّذِي يَشْفَعُ عِنْدَهُ إِلَاّ بِإِذْنِهِ يَعْلَمُ مَا بَيْنَ أَيْدِيهِمْ وَمَا خَلْفَهُمْ وَلَا يُحِيطُونَ بِشَيْءٍ مِّنْ عِلْمِهِ إِلَاّ بِمَا شَاء وَسِعَ كُرْسِيُّهُ السَّمَوَاتِ وَالْأَرْضَ وَلَا يَؤُودُهُ حِفْظُهُمَا وَهُوَ الْعَلِيُّ الْعَظِيمُ}',
          'number': 1,
        },
        {
          'text':
              'اللَّهُمَّ بِكَ أَصْبَحْنَا، وَبِكَ أَمْسَيْنَا ، وَبِكَ نَحْيَا، وَبِكَ نَمُوتُ وَإِلَيْكَ النُّشُورُ',
          'number': 1,
        },
        {
          'text':
              'اللهم أنت ربي، لا إله إلا أنت، خلَقتني وأنا عبدك، وأنا على عهدك ووعدك ما استطعت، أعوذ بك من شرِّ ما صنعت، أبُوء لك بنعمتك عليّ وأبوء بذنبي، فاغفر لي؛ فإنه لا يغفر الذنوب إلا أنت',
          'number': 1,
        },
        {
          'text':
              'اللهم بك أصبحنا، وبك أمسينا، وبك نحيا، وبك نموت، وإليك النشور',
          'number': 1,
        },
        {
          'text':
              'أصبحنا على فِطرة الإسلام، وكلمة الإخلاص، ودين نبينا محمد -صلى الله عليه وسلم- ومِلة أبينا إبراهيم حنيفًا مسلمًا وما كان من المشركين',
          'number': 1,
        },
        {
          'text':
              'للهم إني أسألك العافية في الدنيا والآخرة، اللهم إني أسألك العفو والعافية في ديني ودنياي، وأهلي ومالي، اللهم استُر عوراتي، وآمِن رَوعاتي، اللهم احفظني من بين يدي ومن خلفي، وعن يميني وعن شمالي، ومن فوقي، وأعوذ بعظمتك أن أُغتال من تحتي',
          'number': 1,
        },
        {
          'text':
              ' اللهم عافني في بدني، اللهم عافني في سمعي، اللهم عافني في بصري، لا إله إلا أنت ',
          'number': 3,
        },
        {
          'text':
              ' اللهم إني أعوذ بك من الكفر والفقر، اللهم إني أعوذ بك من عذاب القبر، لا إله إلا أنت',
          'number': 3,
        },
        {
          'text':
              'أصبحنا وأصبح المُلك لله، والحمد لله، لا إله إلا الله وحده لا شريك له، له الملك وله الحمد وهو على كل شيء قدير، ربِّ أسألك خير ما في هذا اليوم ، وخير ما بعده، وأعوذ بك من شرِّ ما في هذا اليوم ، وشر ما بعده، ربِّ أعوذ بك من الكسل، وسوء الكِبَر، ربِّ أعوذ بك من عذابٍ في النار وعذاب في القبر',
          'number': 1,
        },
        {
          'text':
              'اللهم فاطر السموات والأرض، عالم الغيب والشهادة، ربَّ كلِّ شيء ومليكه، أشهد أنْ لا إله إلا أنت، أعوذ بك من شرِّ نفسي، وشر الشيطان وشِرْكه، وأن أَقترف على نفسي سوءًا، أو أجرَّه إلى مسلم',
          'number': 1,
        },
        {
          'text':
              'رضيت بالله ربًّا، وبالإسلام دينًا، وبمحمد -صلى الله عليه وسلم- نبيًّا',
          'number': 3,
        },
        {
          'text':
              'يا حي يا قيُّوم، برحمتك أستغيث، أصلِح لي شأني كله، ولا تَكلني إلى نفسي طرْفة عينٍ',
          'number': 1,
        },
        {
          'text':
              'لا إله إلا الله وحده لا شريك له، له الملك وله الحمد، وهو على كل شيء قدير',
          'number': 1,
        },
        {
          'text':
              'سبحان الله وبحمده عدد خلقه، ورضا نفسه، وزِنة عرشه، ومداد كلماته',
          'number': 3,
        },
        {
          'text': ' سورة الإخلاص، والفلق، والناس',
          'number': 3,
        },
        {
          'text':
              ' بسم الله الذي لا يضرُّ مع اسمه شيء في الأرض ولا في السماء وهو السميع العليم',
          'number': 3,
        },
        {
          'text':
              'اللهم إني أصبحت أُشهدك وأُشهد حمَلة عرشك وملائكتك، وجميع خلْقك أنَّك أنت الله، لا إله إلا أنت وأن محمدًا عبدك ورسولك',
          'number': 4,
        },
        {
          'text': 'سبحان الله وبحمده',
          'number': 100,
        },
        {
          'text': 'أستغفر الله',
          'number': 100,
        },
      ],
    ),
    Azkar(
      title: 'أذكار المساء',
      icon:
          Image.asset('images/icons/crescent-moon.png', width: 40, height: 40),
      data: [
        {
          'text':
              'أَعُوذُ بِاللَّهِ مِنَ الشَّيطَانِ الرَّجِيمِ {اللَّهُ لَا إِلَهَ إِلَاّ هُوَ الْحَيُّ الْقَيُّومُ لَا تَأْخُذُهُ سِنَةٌ وَلَا نَوْمٌ لَّهُ مَا فِي السَّمَوَاتِ وَمَا فِي الأَرْضِ مَن ذَا الَّذِي يَشْفَعُ عِنْدَهُ إِلَاّ بِإِذْنِهِ يَعْلَمُ مَا بَيْنَ أَيْدِيهِمْ وَمَا خَلْفَهُمْ وَلَا يُحِيطُونَ بِشَيْءٍ مِّنْ عِلْمِهِ إِلَاّ بِمَا شَاء وَسِعَ كُرْسِيُّهُ السَّمَوَاتِ وَالْأَرْضَ وَلَا يَؤُودُهُ حِفْظُهُمَا وَهُوَ الْعَلِيُّ الْعَظِيمُ}',
          'number': 1,
        },
        {
          'text':
              'اللهم بك أمسينا، وبك أصبَحنا، وبك نحيا، وبك نموت، وإليك المصير',
          'number': 1,
        },
        {
          'text':
              'اللهم أنت ربي، لا إله إلا أنت، خلَقتني وأنا عبدك، وأنا على عهدك ووعدك ما استطعت، أعوذ بك من شرِّ ما صنعت، أبُوء لك بنعمتك عليّ وأبوء بذنبي، فاغفر لي؛ فإنه لا يغفر الذنوب إلا أنت',
          'number': 1,
        },
        {
          'text':
              'أمسينا على فِطرة الإسلام، وكلمة الإخلاص، ودين نبينا محمد -صلى الله عليه وسلم- ومِلة أبينا إبراهيم حنيفًا مسلمًا وما كان من المشركين',
          'number': 1,
        },
        {
          'text':
              'للهم إني أسألك العافية في الدنيا والآخرة، اللهم إني أسألك العفو والعافية في ديني ودنياي، وأهلي ومالي، اللهم استُر عوراتي، وآمِن رَوعاتي، اللهم احفظني من بين يدي ومن خلفي، وعن يميني وعن شمالي، ومن فوقي، وأعوذ بعظمتك أن أُغتال من تحتي',
          'number': 1,
        },
        {
          'text':
              ' اللهم عافني في بدني، اللهم عافني في سمعي، اللهم عافني في بصري، لا إله إلا أنت',
          'number': 3,
        },
        {
          'text':
              ' اللهم إني أعوذ بك من الكفر والفقر، اللهم إني أعوذ بك من عذاب القبر، لا إله إلا أنت',
          'number': 3,
        },
        {
          'text':
              'أمسينا وأمسى المُلك لله، والحمد لله، لا إله إلا الله وحده لا شريك له، له الملك وله الحمد وهو على كل شيء قدير، ربِّ أسألك خير ما في هذاالليلة، وخير ما بعده، وأعوذ بك من شرِّ ما في هذا الليلة، وشر ما بعده، ربِّ أعوذ بك من الكسل، وسوء الكِبَر، ربِّ أعوذ بك من عذابٍ في النار وعذاب في القبر',
          'number': 1,
        },
        {
          'text':
              'اللهم فاطر السموات والأرض، عالم الغيب والشهادة، ربَّ كلِّ شيء ومليكه، أشهد أنْ لا إله إلا أنت، أعوذ بك من شرِّ نفسي، وشر الشيطان وشِرْكه، وأن أَقترف على نفسي سوءًا، أو أجرَّه إلى مسلم',
          'number': 1,
        },
        {
          'text':
              'رضيت بالله ربًّا، وبالإسلام دينًا، وبمحمد -صلى الله عليه وسلم- نبيًّا',
          'number': 3,
        },
        {
          'text':
              'يا حي يا قيُّوم، برحمتك أستغيث، أصلِح لي شأني كله، ولا تَكلني إلى نفسي طرْفة عينٍ',
          'number': 1,
        },
        {
          'text':
              'لا إله إلا الله وحده لا شريك له، له الملك وله الحمد، وهو على كل شيء قدير',
          'number': 1,
        },
        {
          'text':
              'أَعُوذُ بِكَلِمَاتِ اللَّهِ التَّامَّاتِ مِنْ شَرِّ مَا خَلَقَ',
          'number': 3
        },
        {
          'text':
              'سبحان الله وبحمده عدد خلقه، ورضا نفسه، وزِنة عرشه، ومداد كلماته',
          'number': 3,
        },
        {
          'text': 'سورة الإخلاص، والفلق، والناس',
          'number': 3,
        },
        {
          'text':
              'بسم الله الذي لا يضرُّ مع اسمه شيء في الأرض ولا في السماء وهو السميع العليم',
          'number': 3,
        },
        {
          'text':
              'اللهم إني أمسيتُ أُشهدك وأُشهد حمَلة عرشك وملائكتك، وجميع خلْقك أنَّك أنت الله، لا إله إلا أنت وأن محمدًا عبدك ورسولك',
          'number': 4,
        },
        {
          'text': 'سبحان الله وبحمده',
          'number': 100,
        },
        {
          'text': 'أستغفر الله',
          'number': 100,
        },
      ],
    ),
    Azkar(
      title: 'أذكار الصلاة',
      icon: Image.asset('images/icons/praying.png', width: 40, height: 40),
      data: [
        {
          'text':
              'أستغفر الله، أستغفر الله، أستغفر الله، اللهم أنت السلام، ومنك السلام، تبارَكت يا ذا الجلال والإكرام',
          'number': 1
        },
        {
          'text':
              'لا إله إلا الله، وحده لا شريك له، له الملك، وله الحمد وهو على كل شيء قدير، لا حول ولا قوة إلا بالله، لا إله إلا الله، ولا نعبد إلا إيَّاه، له النعمة وله الفضل، وله الثناء الحسن، لا إله إلا الله مخلصين له الدين ولو كرِه الكافرون',
          'number': 1
        },
        {
          'text':
              'لا إله إلا الله، وحده لا شريك له، له الملك وله الحمد وهو على كل شيء قدير، اللهم لا مانع لما أَعطيت، ولا معطي لما منعت، ولا ينفع ذا الجد منك الجد',
          'number': 1
        },
        {'text': 'سبحان الله، والحمد لله، والله أكبر', 'number': 33},
        {
          'text':
              'لا إله إلا الله وحده لا شريك له، له الملك وله الحمد وهو على كل شيء قدير',
          'number': 1
        },
      ],
    ),
    Azkar(
      title: 'أذكار النوم',
      icon: Image.asset('images/icons/sleeping.png', width: 40, height: 40),
      data: [
        {
          'text':
              'بِاسْمِكَ رَبِّـي وَضَعْـتُ جَنْـبي ، وَبِكَ أَرْفَعُـه، فَإِن أَمْسَـكْتَ نَفْسـي فارْحَـمْها ، وَإِنْ أَرْسَلْتَـها فاحْفَظْـها بِمـا تَحْفَـظُ بِه عِبـادَكَ الصّـالِحـين',
          'number': 1
        },
        {
          'text':
              'اللّهُـمَّ إِنَّـكَ خَلَـقْتَ نَفْسـي وَأَنْـتَ تَوَفّـاهـا لَكَ ممَـاتـها وَمَحْـياها ، إِنْ أَحْيَيْـتَها فاحْفَظْـها ، وَإِنْ أَمَتَّـها فَاغْفِـرْ لَـها . اللّهُـمَّ إِنَّـي أَسْـأَلُـكَ العـافِـيَة',
          'number': 1
        },
        {
          'text': 'اللّهُـمَّ قِنـي عَذابَـكَ يَـوْمَ تَبْـعَثُ عِبـادَك',
          'number': 1
        },
        {'text': 'بِاسْـمِكَ اللّهُـمَّ أَمـوتُ وَأَحْـيا', 'number': 1},
        {
          'text':
              'الـحَمْدُ للهِ الَّذي أَطْـعَمَنا وَسَقـانا، وَكَفـانا، وَآوانا، فَكَـمْ مِمَّـنْ لا كـافِيَ لَـهُ وَلا مُـؤْوي. ',
          'number': 1
        },
        {
          'text':
              'اللّهُـمَّ عالِـمَ الغَـيبِ وَالشّـهادةِ فاطِـرَ السّماواتِ وَالأرْضِ رَبَّ كُـلِّ شَـيءٍ وَمَليـكَه، أَشْهـدُ أَنْ لا إِلـهَ إِلاّ أَنْت، أَعـوذُ بِكَ مِن شَـرِّ نَفْسـي، وَمِن شَـرِّ الشَّيْـطانِ وَشِـرْكِه، وَأَنْ أَقْتَـرِفَ عَلـى نَفْسـي سوءاً أَوْ أَجُـرَّهُ إِلـى مُسْـلِم',
          'number': 1
        },
        {
          'text':
              'اللّهُـمَّ أَسْـلَمْتُ نَفْـسي إِلَـيْكَ، وَفَوَّضْـتُ أَمْـري إِلَـيْكَ، وَوَجَّـهْتُ وَجْـهي إِلَـيْكَ، وَأَلْـجَـاْتُ ظَهـري إِلَـيْكَ، رَغْبَـةً وَرَهْـبَةً إِلَـيْكَ، لا مَلْجَـأَ وَلا مَنْـجـا مِنْـكَ إِلاّ إِلَـيْكَ، آمَنْـتُ بِكِتـابِكَ الّـذي أَنْزَلْـتَ وَبِنَبِـيِّـكَ الّـذي أَرْسَلْـت.',
          'number': 1
        },
        {'text': ' سُبْحَانَ اللَّهِ', 'number': 33},
        {'text': ' الْحَمْدُ لِلَّهِ', 'number': 33},
        {'text': ' اللَّهُ أَكْبَرُ', 'number': 33},
        {
          'text':
              'آمَنَ الرَّسُولُ بِمَا أُنْزِلَ إِلَيْهِ مِنْ رَبِّهِ وَالْمُؤْمِنُونَ ۚ كُلٌّ آمَنَ بِاللَّهِ وَمَلَائِكَتِهِ وَكُتُبِهِ وَرُسُلِهِ لَا نُفَرِّقُ بَيْنَ أَحَدٍ مِنْ رُسُلِهِ ۚ وَقَالُوا سَمِعْنَا وَأَطَعْنَا ۖ غُفْرَانَكَ رَبَّنَا وَإِلَيْكَ الْمَصِيرُ. لَا يُكَلِّفُ اللَّهُ نَفْسًا إِلَّا وُسْعَهَا لَهَا مَا كَسَبَتْ وَعَلَيْهَا مَا اكْتَسَبَتْ رَبَّنَا لَا تُؤَاخِذْنَا إِنْ نَسِينَا أَوْ أَخْطَأْنَا رَبَّنَا وَلَا تَحْمِلْ عَلَيْنَا إِصْرًا كَمَا حَمَلْتَهُ عَلَى الَّذِينَ مِنْ قَبْلِنَا رَبَّنَا وَلَا تُحَمِّلْنَا مَا لَا طَاقَةَ لَنَا بِهِ وَاعْفُ عَنَّا وَاغْفِرْ لَنَا وَارْحَمْنَا أَنْتَ مَوْلَانَا فَانْصُرْنَا عَلَى الْقَوْمِ الْكَافِرِينَ',
          'number': 1
        },
        {
          'text':
              'اللّهُ لاَ إِلَـهَ إِلاَّ هُوَ الْحَيُّ الْقَيُّومُ لاَ تَأْخُذُهُ سِنَةٌ وَلاَ نَوْمٌ لَّهُ مَا فِي السَّمَاوَاتِ وَمَا فِي الأَرْضِ مَن ذَا الَّذِي يَشْفَعُ عِنْدَهُ إِلاَّ بِإِذْنِهِ يَعْلَمُ مَا بَيْنَ أَيْدِيهِمْ وَمَا خَلْفَهُمْ وَلاَ يُحِيطُونَ بِشَيْءٍ مِّنْ عِلْمِهِ إِلاَّ بِمَا شَاء وَسِعَ كُرْسِيُّهُ السَّمَاوَاتِ وَالأَرْضَ وَلاَ يَؤُودُهُ حِفْظُهُمَا وَهُوَ الْعَلِيُّ الْعَظِيمُ',
          'number': 1
        },
        {
          'text':
              ' وفي الصحيحين عنها : أن النبي صلى الله عليه وسلم ، كان إذا أوى إلى فراشه كل ليلة جمع كفيه ثم نفث فيهما وقرأ فيهما ( قل هو الله أحد ) و ( قل أعوذ برب الفلق) و ( قل أعوذ برب الناس) ، ثم مسح بهما ما استطاع من جسده ، يبدأ بهما على رأسه ووجهه وما أقبل من جسده ، يفعل ذلك ثلاث مرات . قال أهل اللغة : النفث: نفخ لطيف بلا ريق',
          'number': 3
        },
      ],
    ),
    Azkar(
      title: 'أذكار الاستيقاظ',
      icon: Image.asset('images/icons/alarm-clock.png', width: 40, height: 40),
      data: [
        {
          'text':
              'الْحَمْدُ للَّهِ الَّذِي أَحْيَانَا بَعْدَ مَا أَمَاتَنَا، وَإِلَيْهِ النُّشُورُ',
          'number': 1
        },
        {
          'text':
              'لاَ إِلَهَ إِلاَّ اللَّهُ وَحْدَهُ لاَ شَرِيكَ لَهُ، لهُ الْمُلْكُ وَلَهُ الحَمْدُ، وَهُوَ عَلَى كُلِّ شَيْءٍ قَدِيرٌ، سُبْحَانَ اللَّهِ، وَالحَمْدُ للَّهِ، وَلاَ إِلَهَ إِلاَّ اللَّهُ، وَاللَّهُ أَكبَرُ، وَلاَ حَوْلَ وَلاَ قُوَّةَ إِلاَّ بِاللَّهِ الْعَلِيِّ الْعَظِيمِ، رَبِّ اغْفرْ لِي',
          'number': 1
        },
        {
          'text':
              'الْحَمْدُ لِلَّهِ الَّذِي عَافَانِي فِي جَسَدِي، وَرَدَّ عَلَيَّ رُوحِي، وَأَذِنَ لِي بِذِكْرِهِ',
          'number': 1
        },
        {
          'text':
              'إِنَّ فِي خَلْقِ السَّمَاوَاتِ وَالْأَرْضِ وَاخْتِلَافِ اللَّيْلِ وَالنَّهَارِ لَآيَاتٍ لِأُولِي الْأَلْبَابِ * الَّذِينَ يَذْكُرُونَ اللَّهَ قِيَامًا وَقُعُودًا وَعَلَى جُنُوبِهِمْ وَيَتَفَكَّرُونَ فِي خَلْقِ السَّمَاوَاتِ وَالْأَرْضِ رَبَّنَا مَا خَلَقْتَ هَذَا بَاطِلًا سُبْحَانَكَ فَقِنَا عَذَابَ النَّارِ * رَبَّنَا إِنَّكَ مَنْ تُدْخِلِ النَّارَ فَقَدْ أَخْزَيْتَهُ وَمَا لِلظَّالِمِينَ مِنْ أَنْصَارٍ* رَبَّنَا إِنَّنَا سَمِعْنَا مُنَادِيًا يُنَادِي لِلْإِيمَانِ أَنْ آمِنُوا بِرَبِّكُمْ فَآمَنَّا رَبَّنَا فَاغْفِرْ لَنَا ذُنُوبَنَا وَكَفِّرْ عَنَّا سَيِّئَاتِنَا وَتَوَفَّنَا مَعَ الْأَبْرَارِ * رَبَّنَا وَآتِنَا مَا وَعَدْتَنَا عَلَى رُسُلِكَ وَلَا تُخْزِنَا يَوْمَ الْقِيَامَةِ إِنَّكَ لَا تُخْلِفُ الْمِيعَادَ * فَاسْتَجَابَ لَهُمْ رَبُّهُمْ أَنِّي لَا أُضِيعُ عَمَلَ عَامِلٍ مِنْكُمْ مِنْ ذَكَرٍ أَوْ أُنْثَى بَعْضُكُمْ مِنْ بَعْضٍ فَالَّذِينَ هَاجَرُوا وَأُخْرِجُوا مِنْ دِيَارِهِمْ وَأُوذُوا فِي سَبِيلِي وَقَاتَلُوا وَقُتِلُوا لَأُكَفِّرَنَّ عَنْهُمْ سَيِّئَاتِهِمْ وَلَأُدْخِلَنَّهُمْ جَنَّاتٍ تَجْرِي مِنْ تَحْتِهَا الْأَنْهَارُ ثَوَابًا مِنْ عِنْدِ اللَّهِ وَاللَّهُ عِنْدَهُ حُسْنُ الثَّوَابِ * لَا يَغُرَّنَّكَ تَقَلُّبُ الَّذِينَ كَفَرُوا فِي الْبِلَادِ * مَتَاعٌ قَلِيلٌ ثُمَّ مَأْوَاهُمْ جَهَنَّمُ وَبِئْسَ الْمِهَادُ * لَكِنِ الَّذِينَ اتَّقَوْا رَبَّهُمْ لَهُمْ جَنَّاتٌ تَجْرِي مِنْ تَحْتِهَا الْأَنْهَارُ خَالِدِينَ فِيهَا نُزُلًا مِنْ عِنْدِ اللَّهِ وَمَا عِنْدَ اللَّهِ خَيْرٌ لِلْأَبْرَارِ * وَإِنَّ مِنْ أَهْلِ الْكِتَابِ لَمَنْ يُؤْمِنُ بِاللَّهِ وَمَا أُنْزِلَ إِلَيْكُمْ وَمَا أُنْزِلَ إِلَيْهِمْ خَاشِعِينَ لِلَّهِ لَا يَشْتَرُونَ بِآيَاتِ اللَّهِ ثَمَنًا قَلِيلًا أُولَئِكَ لَهُمْ أَجْرُهُمْ عِنْدَ رَبِّهِمْ إِنَّ اللَّهَ سَرِيعُ الْحِسَابِ * يَاأَيُّهَا الَّذِينَ آمَنُوا اصْبِرُوا وَصَابِرُوا وَرَابِطُوا وَاتَّقُوا اللَّهَ لَعَلَّكُمْ تُفْلِحُونَ',
          'number': 1
        },
      ],
    ),
    Azkar(
      title: 'أذكار الوضوء',
      icon: Image.asset(
        'images/icons/washing-hand.png',
        width: 40,
        height: 40,
      ),
      data: [
        {'text': 'الذِّكْرُ قَبْلَ الْوُضُوءِ بِسْمِ اللَّهِ', 'number': 1},
        {
          'text':
              'إذا فرغ من وضوئه أشهد أنْ لا إله إلا الله وحده لا شريك له، وأشهد أن محمدًا عبده ورسوله',
          'number': 1
        },
        {
          'text':
              'سبحانك اللهم وبحمْدك، أشهد أنْ لا إله إلا أنت، أستغفرك اللهم وأتوب إليك',
          'number': 1
        },
        {'text': 'الذِّكْرُ قَبْلَ الْوُضُوءِ بِسْمِ اللَّهِ', 'number': 1},
      ],
    ),
  ];

  // doaa ---------------------------------------------------------------------------------------------

  int indexdoaa = 0;
  int pointerdoaa = 0;
  List<int> counterdoaa = List<int>.filled(25, 0);

  void zerodoaa() {
    counterdoaa = List<int>.filled(25, 0);
    notifyListeners();
  }

  void incrementCounterdoaa() {
    if (counterdoaa[pointerdoaa] < doaa[index].data[pointerdoaa]['number']) {
      counterdoaa[pointerdoaa]++;
    }
    notifyListeners();
  }

  void minpointerdoaa() {
    if (pointerdoaa > 0) {
      pointerdoaa--;
      notifyListeners();
    }
  }

  void updatePointerdoaa(int newPointer) {
    pointerdoaa = newPointer;
    notifyListeners();
  }

  void plspointerdoaa() {
    if (pointerdoaa < doaa[index].data.length - 1) {
      pointerdoaa++;
      notifyListeners();
    }
  }

  void refreshdoaa() {
    counterdoaa[pointerdoaa] = 0;
    notifyListeners();
  }

  List<Azkar> doaa = [
    Azkar(
      title: 'ادعية من السنة',
      icon: Image.asset('images/icons/koran.png', width: 40, height: 40),
      data: [
        {
          'text':
              'اللهم صل على محمد وعلى آل محمد، كما صليت على إبراهيم، وعلى آل إبراهيم، إنك حميد مجيد، اللهم بارك على محمد وعلى آل محمد، كما باركت على إبراهيم وعلى آل إبراهيم، إنك حميد مجيد',
          'number': 1,
        },
        {
          'text':
              'اللهم إني ظلمت نفسي ظلما كثيرا ولا يغفر الذنوب إلا أنت، فاغفر لي مغفرة من عندك وارحمني، إنك أنت الغفور الرحيم',
          'number': 1,
        },
        {
          'text':
              'اللهم إني أعوذ بك من العجز والكسل، والجبن والهرم والبخل، وأعوذ بك من عذاب القبر ومن فتنة المحيا والممات',
          'number': 1,
        },
        {
          'text':
              'اللهم إني أعوذ بك من الهم والحزن، والعجز والكسل، والجبن والبخل، وضلع الدين، وغلبة الرجال',
          'number': 1,
        },
        {
          'text':
              'اللهم إني أعوذ بك من زوال نعمتك، وتحول عافيتك، وفجاءة نقمتك، وجميع سخطك',
          'number': 1,
        },
        {
          'text': 'اللهم إني أعوذ بك من البرص والجنون والجذام ومن سيئ الأسقام',
          'number': 1,
        },
        {
          'text':
              'اللهم اغفر لي ذنبي كله، دقه وجله، وأوله وآخره، وعلانيته وسره',
          'number': 1,
        },
        {
          'text': 'اللهم إنك عفو كريم تحب العفو فاعف عني',
          'number': 1,
        },
        {
          'text':
              'اللهم إني أسألك فعل الخيرات وترك المنكرات وحب المساكين وإذا أردت بعبادك فتنة فاقبضني إليك غير مفتون',
          'number': 1,
        },
        {
          'text': 'يا مقلب القلوب ثبت قلبي على دينك',
          'number': 1,
        },
      ],
    ),
    Azkar(
      title: 'ادعية من القران',
      icon: Image.asset('images/icons/quran.png', width: 40, height: 40),
      data: [
        {
          'text':
              'ﺭﺑﻨﺎ ﺗﻘﺒﻞ ﻣﻨﺎ ﺇﻧﻚ ﺃﻧﺖ ﺍﻟﺴﻤﻴﻊ ﺍﻟﻌﻠﻴﻢ، ﻭﺗﺐ ﻋﻠﻴﻨﺎ ﺇﻧﻚ ﺃﻧﺖ ﺍﻟﺘﻮﺍﺏ ﺍﻟﺮﺣﻴﻢ',
          'number': 1,
        },
        {
          'text': 'ﺭﺑﻨﺎ ﺁﺗﻨﺎ ﻓﻲ ﺍﻟﺪﻧﻴﺎ ﺣﺴﻨﺔ ﻭﻓﻲ ﺍﻵﺧﺮﺓ ﺣﺴﻨﺔ ﻭﻗﻨﺎ ﻋﺬﺍﺏ ﺍﻟﻨﺎﺭ',
          'number': 1,
        },
        {
          'text':
              'ﺭﺑﻨﺎ ﺃﻓﺮﻍ ﻋﻠﻴﻨﺎ ﺻﺒﺮﺍ ﻭﺛﺒﺖ ﺃﻗﺪﺍﻣﻨﺎ ﻭﺍﻧﺼﺮﻧﺎ ﻋﻠﻰ ﺍﻟﻘﻮﻡ ﺍﻟﻜﺎﻓﺮﻳﻦ',
          'number': 1,
        },
        {
          'text':
              'ﺭﺑﻨﺎ ﻻ ﺗﺆﺍﺧﺬﻧﺎ ﺇﻥ ﻧﺴﻴﻨﺎ ﺃﻭ ﺃﺧﻄﺎﻧﺎ، ﺭﺑﻨﺎ ﻭﻻ ﺗﺤﻤﻞ ﻋﻠﻴﻨﺎ ﺇﺻﺮﺍ ﻛﻤﺎ ﺣﻤﻠﺘﻪ ﻋﻠﻰ ﺍﻟﺬﻳﻦ ﻣﻦ ﻗﺒﻠﻨﺎ',
          'number': 1,
        },
        {
          'text':
              'ﺭﺑﻨﺎ ﻭﻻ ﺗﺤﻤﻠﻨﺎ ﻣﺎ ﻻ ﻃﺎﻗﺔ ﻟﻨﺎ ﺑﻪ ﻭﺍﻋﻒ ﻋﻨﺎ ﻭﺍﻏﻔﺮ ﻟﻨﺎ ﻭﺍﺭﺣﻤﻨﺎ ﺃﻧﺖ ﻣﻮﻻﻧﺎ ﻓﺎﻧﺼﺮﻧﺎ ﻋﻠﻰ ﺍﻟﻘﻮﻡ ﺍﻟﻜﺎﻓﺮﻳﻦ',
          'number': 1,
        },
        {
          'text':
              'ﺭﺑﻨﺎ ﻻ ﺗﺰﻍ ﻗﻠﻮﺑﻨﺎ ﺑﻌﺪ ﺇﺫ ﻫﺪﻳﺘﻨﺎ ﻭﻫﺐ ﻟﻨﺎ ﻣﻦ ﻟﺪﻧﻚ ﺭﺣﻤﺔ ﺇﻧﻚ ﺃﻧﺖ ﺍﻟﻮﻫﺎﺏ',
          'number': 1,
        },
        {
          'text': 'ﺭﺑﻨﺎ ﺇﻧﻚ ﺟﺎﻣﻊ ﺍﻟﻨﺎﺱ ﻟﻴﻮﻡ ﻻ ﺭﻳﺐ ﻓﻴﻪ ﺇﻥ ﺍﻟﻠﻪ ﻻ ﻳﺨﻠﻒ ﺍﻟﻤﻴﻌﺎﺩ',
          'number': 1,
        },
        {
          'text': ' ﺭﺑﻨﺎ ﺇﻧﻨﺎ ﺁﻣﻨﺎ ﻓﺎﻏﻔﺮ ﻟﻨﺎ ﺫﻧﻮﺑﻨﺎ ﻭﻗﻨﺎ ﻋﺬﺍﺏ ﺍﻟﻨﺎﺭ.',
          'number': 3,
        },
        {
          'text': 'ﺭﺏ ﻫﺐ ﻟﻲ ﻣﻦ ﻟﺪﻧﻚ ﺫﺭﻳﺔ ﻃﻴﺒﺔ ﺇﻧﻚ ﺳﻤﻴﻊ ﺍﻟﺪﻋﺎﺀ.',
          'number': 1,
        },
        {
          'text': 'ﺭﺑﻨﺎ ﺁﻣﻨﺎ ﺑﻤﺎ ﺃﻧﺰﻟﺖ ﻭﺍﺗﺒﻌﻨﺎ ﺍﻟﺮﺳﻮﻝ ﻓﺎﻛﺘﺒﻨﺎ ﻣﻊ ﺍﻟﺸﺎﻫﺪﻳﻦ.',
          'number': 1,
        },
        {
          'text':
              'ﺭﺑﻨﺎ ﺍﻏﻔﺮ ﻟﻨﺎ ﺫﻧﻮﺑﻨﺎ ﻭﺇﺳﺮﺍﻓﻨﺎ ﻓﻲ ﺃﻣﺮﻧﺎ ﻭﺛﺒﺖ ﺃﻗﺪﺍﻣﻨﺎ ﻭﺍﻧﺼﺮﻧﺎ ﻋﻠﻰ ﺍﻟﻘﻮﻡ ﺍﻟﻜﺎﻓﺮﻳﻦ.',
          'number': 1
        },
        {
          'text': ' ﺭﺑﻨﺎ ﻣﺎ ﺧﻠﻘﺖ ﻫﺬﺍ ﺑﺎﻃﻼ ﺳﺒﺤﺎﻧﻚ ﻓﻘﻨﺎ ﻋﺬﺍﺏ ﺍﻟﻨﺎﺭ.',
          'number': 1,
        },
        {
          'text': 'ﺭﺑﻨﺎ ﺇﻧﻚ ﻣﻦ ﺗﺪﺧﻞ ﺍﻟﻨﺎﺭ ﻓﻘﺪ ﺃﺧﺰﻳﺘﻪ ﻭﻣﺎ ﻟﻠﻈﺎﻟﻤﻴﻦ ﻣﻦ ﺃﻧﺼﺎﺭ.',
          'number': 1,
        },
      ],
    ),
    Azkar(
      title: 'الاستغفار',
      icon: Image.asset('images/icons/praying.png', width: 40, height: 40),
      data: [
        {
          'text':
              'رَبَّنَا ظَلَمْنَا أَنْفُسَنَا وَإِنْ لَمْ تَغْفِرْ لَنَا وَتَرْحَمْنَا لَنَكُونَنَّ مِنَ الْخَاسِرِينَ',
          'number': 1
        },
        {
          'text': ' رَبِّ اغْفِرْ وَارْحَمْ وَأَنْتَ خَيْرُ الرَّاحِمِينَ ',
          'number': 1
        },
        {'text': 'ربِّ اغْفِرْ لي خطيئتي يومَ الدِّين.', 'number': 1},
        {
          'text':
              ' اللهُمَّ إني ظلمتُ نفسي فاغفر لي، فإنه لا يغفر الذنوب إلا أنت',
          'number': 1
        },
        {
          'text':
              "اللهُمَّ مغفرتك أوسعُ لي من ذنوبي، ورحمتُك أرْجَى عندي من عملي",
          'number': 1
        },
      ],
    ),
  ];

  // goals-------------------------------------------------------------------------------------------
  Future<List<Goal>> getGoals() async {
    final db = await openDatabase('your_database.db');
    final List<Map<String, dynamic>> maps = await db.query('goals');

    return List.generate(maps.length, (i) {
      return Goal.fromMap(maps[i]);
    });
  }

  // Settings ----------------------------------------------------------------------------------------
  String _profileName = 'User';
  bool _disablePassword = false;
  ImageProvider _image = const AssetImage('images/profilepic.png');
  final Map<String, Map<String, String>> _currentBackgrounds = {
    'home': {'type': 'asset', 'path': 'images/backgrounds/homescreen.png'},
    'settings': {'type': 'asset', 'path': 'images/backgrounds/settingback.png'},
    'diary': {
      'type': 'asset',
      'path': 'images/backgrounds/Diarybackground.png'
    },
    'goal': {'type': 'asset', 'path': 'images/backgrounds/goals.png'},
    'azkar': {'type': 'asset', 'path': 'images/backgrounds/azkar.jpg'},
    'tasks': {'type': 'asset', 'path': 'images/backgrounds/taskback.png'},
    'self': {'type': 'asset', 'path': 'images/backgrounds/selfbackground.png'},
    'feedback': {'type': 'asset', 'path': 'images/backgrounds/settingback.png'},
  };
  final Map<String, String> _settings = {};

  String get profileName => _profileName;
  bool get disablePassword => _disablePassword;
  ImageProvider get image => _image;
  Map<String, Map<String, String>> get currentBackgrounds =>
      _currentBackgrounds;

  Future<void> loadSettings() async {
    _settings.addAll(await DatabaseHelper.getSettings());
    SharedPreferences prefs = await SharedPreferences.getInstance();
    change = prefs.getBool('seen') ?? false;

    _profileName = _settings['profileName'] ?? _profileName;

    String? disablePasswordFromDb = _settings['disablePassword'];
    if (disablePasswordFromDb != null) {
      _disablePassword = disablePasswordFromDb == '1';
    }
    String? imagePath = _settings['image'];
    if (imagePath != null) {
      if (imagePath.startsWith('images/')) {
        _image = AssetImage(imagePath);
      } else {
        _image = FileImage(File(imagePath));
      }
    }
    for (String screen in _currentBackgrounds.keys) {
      String? backgroundPath = _settings['$screen-background'];
      if (backgroundPath != null) {
        if (backgroundPath.startsWith('images/')) {
          _currentBackgrounds[screen] = {
            'type': 'asset',
            'path': backgroundPath
          };
        } else {
          _currentBackgrounds[screen] = {
            'type': 'file',
            'path': backgroundPath
          };
        }
      }
    }
    notifyListeners();
  }

  Future<void> changeImage(ImageProvider newImage) async {
    _image = newImage;
    String imagePath;

    if (newImage is AssetImage) {
      imagePath = (newImage).assetName;
    } else if (newImage is FileImage) {
      imagePath = (newImage).file.path;
    } else {
      throw Exception('Unsupported ImageProvider type');
    }

    _settings['image'] = imagePath;
    await DatabaseHelper.saveSetting('image', imagePath);
    notifyListeners();
  }

  Future<void> changeBackground(String screen, String imagePath) async {
    _currentBackgrounds[screen] = {'type': 'file', 'path': imagePath};
    _settings['$screen-background'] = imagePath;
    await DatabaseHelper.saveSetting('$screen-background', imagePath);
    notifyListeners();
  }

  Future<void> changeName(String newName) async {
    _profileName = newName;
    _settings['profileName'] = newName;
    await DatabaseHelper.saveSetting('profileName', newName);
    notifyListeners();
  }

  bool change = false;

  Future<void> resetSeen() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    change = !(prefs.getBool('seen') ?? false);
    await prefs.setBool('seen', change);
    notifyListeners();
  }

  Model() {
    loadSettings();
  }

  Future<bool> checkFirstSeen() async {
    SharedPreferences prefs = await SharedPreferences.getInstance();
    bool seen = (prefs.getBool('seen') ?? false);

    if (seen) {
      return false;
    } else {
      prefs.setBool('seen', true);
      return true;
    }
  }
}

// clases -----------------------------------------------------------------------------------------
class Task {
  String title;
  String time;
  bool clicked;

  Task({required this.title, required this.time, this.clicked = false});
}

class Azkar {
  String title;
  Image icon;
  List data;

  Azkar({required this.title, required this.data, required this.icon});
}

class Diary {
  final int? id;
  final String title;
  final String subtitle;
  final String date;
  final String? imagePath;  
  final String fontFamily; 
  final int fontColor;

  Diary({
    this.id,
    required this.title,
    required this.subtitle,
    required this.date,
    this.imagePath,
    required this.fontFamily,
    required this.fontColor,
  });

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'title': title,
      'subtitle': subtitle,
      'date': date,
      'imagePath': imagePath,
      'fontFamily': fontFamily,
      'fontColor': fontColor,
    };
  }

  factory Diary.fromMap(Map<String, dynamic> map) {
    return Diary(
      id: map['id'],
      title: map['title'],
      subtitle: map['subtitle'],
      date: map['date'],
      imagePath: map['imagePath'],
      fontFamily: map['fontFamily'],
      fontColor: map['fontColor'],
    );
  }
}

class Dashboard {
  String title;
  String image;

  Dashboard({required this.title, required this.image});
}

class Imagefortime {
  String image;

  Imagefortime({required this.image});
}

class Goal {
  int? id;
  String name;
  String? dueDate;
  int tasksCompleted;
  int totalTasks;
  int milestonesCompleted;
  int totalMilestones;
  String description;
  String? imagePath;

  Goal({
    this.id,
    required this.name,
    this.dueDate,
    required this.tasksCompleted,
    required this.totalTasks,
    required this.milestonesCompleted,
    required this.totalMilestones,
    required this.description,
    this.imagePath,
  });

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'dueDate': dueDate,
      'tasksCompleted': tasksCompleted,
      'totalTasks': totalTasks,
      'milestonesCompleted': milestonesCompleted,
      'totalMilestones': totalMilestones,
      'description': description,
      'imagePath': imagePath,
    };
  }

  factory Goal.fromMap(Map<String, dynamic> map) {
    return Goal(
      id: map['id'],
      name: map['name'],
      dueDate: map['dueDate'],
      tasksCompleted: map['tasksCompleted'],
      totalTasks: map['totalTasks'],
      milestonesCompleted: map['milestonesCompleted'],
      totalMilestones: map['totalMilestones'],
      description: map['description'],
      imagePath: map['imagePath'],
    );
  }
}

class Tasks {
  int? id;
  late int goalId;
  String description;
  String dueDate;
  bool isCompleted;

  Tasks({
    this.id,
    required this.goalId,
    required this.description,
    required this.dueDate,
    this.isCompleted = false,
  });

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'goalId': goalId,
      'description': description,
      'dueDate': dueDate,
      'isCompleted': isCompleted ? 1 : 0,
    };
  }

  factory Tasks.fromMap(Map<String, dynamic> map) {
    return Tasks(
      id: map['id'],
      goalId: map['goalId'],
      description: map['description'],
      dueDate: map['dueDate'],
      isCompleted: map['isCompleted'] == 1,
    );
  }
}

class Milestone {
  int? id;
  late int goalId;
  String description;
  String dueDate;
  bool isCompleted;

  Milestone({
    this.id,
    required this.goalId,
    required this.description,
    required this.dueDate,
    this.isCompleted = false,
  });

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'goalId': goalId,
      'description': description,
      'dueDate': dueDate,
      'isCompleted': isCompleted ? 1 : 0,
    };
  }

  factory Milestone.fromMap(Map<String, dynamic> map) {
    return Milestone(
      id: map['id'],
      goalId: map['goalId'],
      description: map['description'],
      dueDate: map['dueDate'],
      isCompleted: map['isCompleted'] == 1,
    );
  }
}
